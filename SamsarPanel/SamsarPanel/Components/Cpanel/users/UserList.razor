@page "/cpanel/users/"
@using Dapper
@using Domain.Resourses
@using Domain.ViewModels
@using Microsoft.Data.SqlClient
@using Microsoft.Extensions.Caching.Memory
@using System.Diagnostics
@layout Layout.Cpanel.MainLayoutCpanel
@inject UserManager<ApplicationUser> userManager
@inject NavigationManager nav
@inject IMemoryCache cache
@rendermode InteractiveServer
<PageTitle>Home</PageTitle>

<div class="page-header">
    <div>
        <h3>کاربران</h3>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">کنترل پنل</a></li>
                <li class="breadcrumb-item active"><a href="#">کاربران</a></li>
            </ol>
        </nav>
    </div>
</div>
<!-- end::page header -->

<div class="card">
    <div class="card-body">
        <h5 class="card-title">عنوان محتوا</h5>
        <form class="search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="جستجو ..." @bind-value="search">
                <div class="input-group-append">
                    <button class="btn" type="button" @onclick="SearchBtn">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div class="table-responsive" tabindex="1" style="overflow: auto; outline: none;">
            <table class="table">
                <tr class="text-center">
                    <th>آواتار </th>
                    <th>مشخصات </th>
                    <th>راه های ارتباط</th>
                    <th>وضعیت</th>
                    <th>امار بازدید</th>

                    <th></th>
                </tr>
                @foreach (var item in Users)
                {
                    <tr class="text-center">
                        <td><img src="@item.avatar" style="width:50px;height:50px;border-radius:50%;display:block;margin:auto"/></td>
                        <td>@item.FullName<div>@item.UserName</div></td>
                        <td>@item.Email<div>@item.PhoneNumber</div></td>

                        <td>
                            @if (item.IsSuspend)
                            {
                                <span class="bg-warning d-inline-block border m-auto" style="border-radius: 50%;  width: 10px;  height: 10px;"></span>
                            }
                            else
                            {
                                <span class="bg-success d-inline-block border m-auto" style="border-radius: 50%;  width: 10px;  height: 10px;"></span>
                            }
                        </td>
                        <td>@item.LastDateLogin<div>@item.LoginCount بازدید</div></td>
                        <td class="text-left">
                            <div class="dropdown">
                                <a href="#" class="btn btn-light btn-floating btn-icon btn-sm" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                </a>
                                <div class="dropdown-menu">
                                    <button class="dropdown-item" type="button" @onclick='()=> nav.NavigateTo($"/cpanel/users/profile/{item.UserId}" , true)'>پروفایل</button>
                                    <button class="dropdown-item" type="button">عمل دیگر</button>
                                    <button class="dropdown-item" type="button">یک عمل دیگر</button>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>

    </div>
</div>
@code {
    public List<UserVM> Users { get; set; } = new List<UserVM>();
    string search = "";
    protected override async Task OnInitializedAsync()
    {
        var allUsers = new List<UserVM>();
        if (cache.TryGetValue("all-users", out allUsers))
        {
            Users = allUsers;
            cache.Remove("all-users");
            return;
        }

        //"" +" " +"" ===> " "  ""
        Stopwatch stopwatch = new Stopwatch();
        // شروع زمان‌سنجی
        stopwatch.Start();
        var conStr = "Server=(localdb)\\mssqllocaldb;Database=aspnet-SamsarPanel-3353ccfb-a532-47d2-b5f2-9c5d23693f62;Trusted_Connection=True;MultipleActiveResultSets=true";
        using(var con=new SqlConnection(conStr)){
            var query = @"declare @search nvarchar =''
                                select Email,Firstname,Lastname,PhoneNumber,Id,UserName,Avater,LastDateLogin,LoginCount
                                from AspNetUsers
                                where UserName like N'%'+@search+'%' or Firstname like  N'%'+@search+'%' 
                                or Lastname like  N'%'+@search+'%' or Email like  N'%'+@search+'%' 
                                or PhoneNumber like  N'%'+@search+'%' ";
            var res= await con.QueryAsync<UserVM>(query);
            Users = res.ToList();


        }
        stopwatch.Stop();

        // نمایش زمان صرف شده
        var xx = stopwatch.ElapsedMilliseconds;

        Stopwatch stopwatch2 = new Stopwatch();
        // شروع زمان‌سنجی
        stopwatch2.Start();

        Users = await userManager.Users.Select(s => new UserVM
            {
                Email = s.Email,
                FullName = (s.Firstname ?? string.Empty + " " + s.Lastname ?? string.Empty).Trim(),
                PhoneNumber = s.PhoneNumber??string.Empty,
                UserId = s.Id,
                UserName=s.UserName,
                IsSuspend=s.IsSuspend,
                avatar = string.IsNullOrEmpty(s.Avater) ? ConstantCpanel.image_user_no_avatar : ConstantCpanel.image_user_Path + "/" + s.Avater,
                LastDateLogin=s.LastDateLogin,
                LoginCount=s.LoginCount

            }).AsNoTracking().ToListAsync();
        stopwatch2.Stop();
        var xxx = stopwatch2.ElapsedMilliseconds;
        cache.Set("all-users", Users);
    }
    private async Task SearchBtn(MouseEventArgs e)
    {

        //await userManager.Users.Count();
        //2ms
            Users = await userManager.Users.Where(a => a.UserName.Contains(search) 
               || a.Firstname.Contains(search) || a.Lastname.Contains(search) 
              || a.Email.Contains(search) || a.PhoneNumber.Contains(search)).Select(s => new UserVM
                {
                    Email = s.Email,
                    FullName = (s.Firstname ?? string.Empty + " " + s.Lastname ?? string.Empty).Trim(),
                    PhoneNumber = s.PhoneNumber ?? string.Empty,
                    UserId = s.Id,
                    UserName = s.UserName,
                    IsSuspend = s.IsSuspend,
                    avatar = string.IsNullOrEmpty(s.Avater) ? ConstantCpanel.image_user_no_avatar : ConstantCpanel.image_user_Path + "/" + s.Avater,
                    LastDateLogin = s.LastDateLogin,
                    LoginCount = s.LoginCount

                }).AsNoTracking().ToListAsync();
    }
}