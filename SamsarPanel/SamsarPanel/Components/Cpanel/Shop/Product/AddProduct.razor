@page "/cpanel/shop/products/add"
@page "/cpanel/shop/products/edit/{id:int}"
@using Application.Helpers
@using Application.Repositories.Shop
@using Application.Repositories.cpanel
@using Blazored.TextEditor
@using Domain.Resourses
@using MD.PersianDateTime
@using SamsarPanel.Ckeditor
@inject IJSRuntime js
@inject NavigationManager nav
 @rendermode InteractiveServer
<link rel="stylesheet" href="/ckeditor/css/site.css" />
<script src="/ckeditor/js/ckeditor.js"></script>
<script src="/ckeditor/js/CKEditorInterop.js"></script>

<div class="page-header">
    <div>
        <h3>افزودن محصول جدید</h3>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/cpanel/">داشبورد</a></li>
                <li class="breadcrumb-item"><NavLink href="/cpanel/shop/products">لیست محصولات</NavLink></li>
                <li class="breadcrumb-item active" aria-current="page">محصول جدید</li>
            </ol>
        </nav>
    </div>

</div>
<!-- end::page header -->

<div class="card">
    <div class="card-body">
        <EditForm Model="product" OnSubmit="Save" Enhance FormName="f1">
            <div class="row">

                <div class="col-12">
                    <label class="form-label">عنوان</label>
                    <InputText @bind-Value="product.Name" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">دسته بندی محصول</label>
                    <InputSelect @bind-Value="product.CatalogId" class="form-control">
                        <option value="0">گزینه ای انتخاب کنید</option>
                        @foreach (var item in catalogs)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }

                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label class="form-label">وضعیت انتشار</label>
                    <InputSelect @bind-Value="product.IsPublish" class="form-control">
                        <option value="true">منتشر شود</option>
                        <option value="false">عدم انتشار</option>
                    </InputSelect>
                </div>
                <div class="col-md-6 mt-3">
                    <label class="form-label">مبلغ جاری</label>
                    <InputNumber @bind-Value="product.Price" class="form-control text-left" />
                    <p style="font-size:1.5em" class="text-left mb-0">@FormattedPrice</p>
                </div>
                <div class="col-md-6 mt-3">
                    <label class="form-label">مبلغ قبلی</label>
                    <InputNumber @bind-Value="product.PriceOld" class="form-control  text-left" />
                    <p style="font-size:1.5em" class="text-left mb-0">@FormattedPriceOld</p>
                </div>
                <div class="col-12 mt-4">
                    <label class="form-label">چکیده محصول</label>
                   
                    <CKEditorBlazor DisplayName="product.ShortFeauchers" @bind-Value="product.ShortFeauchers" UrlToPostImage="http://localhost:5266/api/Upload/uploadImage">
                    </CKEditorBlazor>

                </div>
                <div class="col-12 mt-4">
                    <label class="form-label">ویژگی های محصول</label>
                    
                    <CKEditorBlazor DisplayName="product.Feauchers" @bind-Value="product.Feauchers" UrlToPostImage="http://localhost:5266/api/Upload/uploadImage">
                    </CKEditorBlazor>

                </div>
                <div class="col-12 mt-4">
                    <label class="form-label">توضیح  محصول</label>
                    <CKEditorBlazor DisplayName="product.Description" @bind-Value="product.Description" UrlToPostImage="http://localhost:5266/api/Upload/uploadImage">
                   </CKEditorBlazor>

                    
                    
                    

                </div>
                <div class="col-12">
                    <div class="card rounded">
                        <div class="card-body">
                            <h5 class="text-info">بارگزاری تصویر</h5>
                            @* <img src="@userVM.GetAvatar()" class="img-fluid m-auto d-block img-thumbnail" /> *@
                            <div class="mt-3">
                                <InputFile class="form-control" onchange="HandleInputFile" multiple />
                                <button type="button" class="btn btn-success mt-3 float-right " @onclick="UploadFile">بارگزاری تصویر</button>
                                @foreach (var item in extraImages)
                                {
                                    <img src="@ConstantCpanel.image_product_Path/@item" style="width:200px;" />
                                }
                                <div></div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-12 mt-3">
                    <button type="submit" class="btn btn-success">ذخیره .....</button>
                </div>
            </div>
        </EditForm>

    </div>
</div>


<style>
    .ql-editor, .ql-container {
        direction: rtl;
        color: #000;
        text-align: right;
        font-family: "primary-font", "segoe ui", "tahoma";
        height: fit-content;
    }

    .ql-ui {
        position: relative !important;
        padding: 0 10px;
        right: -12px;
    }


    .ql-toolbar {
        background: #fff;
    }
</style>
@code {
    [Parameter] public int id { get; set; } = 0;
    [SupplyParameterFromForm]
    public Domain.Models.shop.Product? product { get; set; } = new Domain.Models.shop.Product();
    List<Domain.Models.shop.Catalog> catalogs = new List<Domain.Models.shop.Catalog>();
    string priceSplitComa = "";


    List<IBrowserFile> files;
    List<string> extraImages = new List<string>();
    private string FormattedPrice => product.Price.ToString("#,0 تومان");
    private string FormattedPriceOld => product.PriceOld.ToString("#,0 تومان");

    protected override async Task OnInitializedAsync()
    {
        if (id>0)
        {
            ProductRepository productRepository = new ProductRepository();
            product = await productRepository.GetById(id);
            if (product==null)
            {
                nav.NavigateTo("/cpanel/shop/products",true);
                return;
            }

            if (!string.IsNullOrEmpty(product.Images))
            {
                 extraImages = product.Images.Split(',').ToList();
            }
        }  
        CatalogRepository catalogRepository = new CatalogRepository();
       
        catalogs = await catalogRepository.GetAllAsync();
        
    }

    async Task<bool> CheckValidData()
    {
        var isOk = true;
        if (string.IsNullOrEmpty(product.Name))
        {
            await js.InvokeVoidAsync("toastError", "عنوان محصول وارد نشده");
            isOk = false;
        }
        if (product.Price < 10000)
        {
            await js.InvokeVoidAsync("toastError", "مبلغ وارد شده صحیح نمی باشد");
            isOk = false;
        }

        if (product.CatalogId == 0)
        {
            await js.InvokeVoidAsync("toastError", "دسته محصول را انتخاب کنید");
            isOk = false;
        }
        if (string.IsNullOrEmpty(product.Images))
        {
            await js.InvokeVoidAsync("toastError", "تصویری انتخاب نمایید");
            isOk = false;
        }
        //product.Description = await this.QuillHtmlD.GetHTML();

        if (product.Description.Length < 50)
        {
            await js.InvokeVoidAsync("toastError", "توضیحات محصول کوتاه می باشد");
            isOk = false;
        }
        //product.Feauchers = await this.QuillHtmlF.GetHTML();

        if (product.Feauchers.Length < 50)
        {
            await js.InvokeVoidAsync("toastError", "ویژگیهای محصول کوتاه می باشد");
            isOk = false;
        }
        return isOk;
    }

    async Task Save()
    {

        if (await CheckValidData() == false) return;
        ProductRepository productRepository = new ProductRepository();
        product.Cdate = product.Mdate = new PersianDateTime(DateTime.Now).ToString();

        var res = await productRepository.InsertAsync(product);
        if (res.IsSuccess)
        {
            await js.InvokeVoidAsync("toast", "ذخیره شد");
            return;
        }


        await js.InvokeVoidAsync("toastError", res.Message);

    }

    async void HandleInputFile(InputFileChangeEventArgs e)
    {
        if (e.FileCount > 4)
        {
            await js.InvokeVoidAsync("toastError", "حداکثر 4 تصویر میتوانید انتخاب نمایید");
            return;
        }
        var selectedFiles = e.GetMultipleFiles(4).ToList();
        if (selectedFiles != null && selectedFiles.Count > 0)
        {
            files = selectedFiles;
        }


    }





    private async Task UploadFile(MouseEventArgs e)
    {

        var upload = new UploadFile();
        if (files == null || files.Count == 0)
        {
            await js.InvokeVoidAsync("toastError", "فایلی انتخاب کنید");
            return;
        }
        var res = await upload.Uploads(files, ConstantCpanel.pysicaly_image_product_path, ConstantCpanel.image_Valid_Types);

        if (res.IsSuccess)
        {
            product.Images = res.Filename;
            await js.InvokeVoidAsync("toast", "تصاویر انتخابی آپلود شدند");
        }
        else
        {
            await js.InvokeVoidAsync("toastError", res.Message);
        }



    }


    // public async Task GetHTML()
    // {
    //     QuillHTMLContent = await this.QuillHtml.GetHTML();
    // }

    // public async Task SetHTML()
    // {
    //     string QuillContent =
    //         @"<a href='http://BlazorHelpWebsite.com/'>" +
    //         "<img src='images/BlazorHelpWebsite.gif' /></a>";

    //     await this.QuillHtml.LoadHTMLContent(QuillContent);
    // }


}