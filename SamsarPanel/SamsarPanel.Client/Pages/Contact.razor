@page "/contact/{id:int}"
@page "/contact"
@using MD.PersianDateTime
@using SamsarPanel.Client.ViewModels
@using System.ComponentModel.DataAnnotations
@inject NavigationManager nav
<div class="container py-5">
    <div class="row g-4">

        <!-- کارت توضیحات + نقشه (سمت چپ) -->
        <div class="col-md-6">
            <div class="card shadow-lg border-0 rounded-4 h-100">
                <div class="card-body d-flex flex-column p-4">
                    <h3 class="mb-3 fw-bold text-success text-center">ثبت سفارش</h3>
                    <p class="text-muted fs-5 lh-lg">
                        ما همواره به دنبال بهبود کیفیت خدمات خود هستیم.
                        شما می‌توانید در این بخش سفارشات خود را ثبت کنید و انتقادات و پیشنهادات ارزشمندتان را با ما به اشتراک بگذارید.
                        با کمک شما می‌توانیم خدماتی بهتر و سریع‌تر ارائه دهیم.
                        از همراهی شما سپاسگزاریم 🙏
                    </p>

                    <div class="mt-4">
                        <h5 class="fw-bold text-primary mb-3 text-center">مکان ما روی نقشه</h5>
                        <div class="map-container text-center">
                            <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3225.190943705052!2d59.57306648033474!3d36.34635284929645!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f6c90f69c90!2sMashhad!5e0!3m2!1sen!2s!4v1759510834349"
                                    width="100%" height="250" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- فرم تماس (سمت راست) -->
        <div class="col-md-6">
            <div class="card shadow-lg border-0 rounded-4 h-100">
                <div class="card-body p-4">
                    <h3 class="mb-4 fw-bold text-primary text-center">فرم تماس با ما</h3>

                    <EditForm Model="@contactModel" Enhance FormName="ContactForm" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">نام کامل</label>
                            <InputText class="form-control"
                                       @bind-Value="contactModel.FullName"
                                       placeholder="به عنوان مثال علی محمدی" />
                            <ValidationMessage For="@(() => contactModel.FullName)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">ایمیل</label>
                            <InputText type="email" class="form-control"
                                       @bind-Value="contactModel.Email"
                                       placeholder="example@gmail.com" />
                            <ValidationMessage For="@(() => contactModel.Email)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">شماره تلفن *</label>
                            <InputText class="form-control"
                                       @bind-Value="contactModel.Phone"
                                       placeholder="به عنوان مثال 09123456789" />
                            <ValidationMessage For="@(() => contactModel.Phone)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">موضوع *</label>
                            <InputText class="form-control"
                                       @bind-Value="contactModel.Subject"
                                       placeholder="موضوع پیام خود را وارد کنید" />
                            <ValidationMessage For="@(() => contactModel.Subject)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">متن پیام *</label>
                            <InputTextArea class="form-control" rows="6"
                                           @bind-Value="contactModel.Message"
                                           placeholder="لطفا پیام خود را اینجا وارد کنید..." />
                            <ValidationMessage For="@(() => contactModel.Message)" class="text-danger small" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg rounded-pill shadow">
                                ارسال پیام
                            </button>
                        </div>
                    </EditForm>
                    @if (mes!="")
                    {
                        <div class="alert alert-info my-3 text-center"><strong>@mes</strong></div>
                    }       
                </div>
            </div>
        </div>

    </div>
</div>
@inject HttpClient http

<EItaComponent @ref="EItaComponent"/>
<TelegramBot @ref="TelegramBot"/>
@using SamsarPanel.Client.Components
@using SamsarPanel.Client.Components.Telegram
@code {
    public   EItaComponent EItaComponent { get; set; } = new EItaComponent();
    public TelegramBot TelegramBot { get; set; } = new TelegramBot();
    string mes = "";
    [SupplyParameterFromForm]
    public ContactModel contactModel { get; set; } = new ContactModel();

    [Parameter]
    public int id { get; set; } = 0;
    private async Task HandleValidSubmit()
    {
        var path = nav.Uri.ToString();
        var productUrl = "";
        if (path.Contains("contact/"))
        {
             productUrl = nav.Uri.ToString().Replace("contact", "detail");
        }
        var fd = new PersianDateTime(DateTime.Now).ToLongDateTimeString();
        
        //        await http.GetFromJsonAsync<Product>($"api/shop/setorder/{id}/{contactModel.Email}/{contactModel.FullName}/{contactModel.Message}/{contactModel.Phone}/{contactModel.Subject}");
        var res= await http.PostAsJsonAsync($"api/shop/setorder/{id}", contactModel);
        if (res.IsSuccessStatusCode)
        {
            string multiLineText = $@"یک درخواست برای شما ثبت شده است
                                                نام : {contactModel.FullName}
                                                ایمل :{contactModel.Email}
                                                شماره : {contactModel.Phone}
                                                موضوع : {contactModel.Subject}
                                                پیام : {contactModel.Message}
                                                {fd}";
            if (productUrl!="")
            {
                 multiLineText = $@"یک درخواست برای شما ثبت شده است
                                            نام : {contactModel.FullName}
                                            ایمل :{contactModel.Email}
                                            شماره : {contactModel.Phone}
                                            موضوع : {contactModel.Subject}
                                            پیام : {contactModel.Message}
                                            آدرس محصول : {productUrl}
                                            {fd}";
            }

            await TelegramBot.SendMessageToAllMembers(multiLineText);
            await EItaComponent.SendMessage(multiLineText);

            mes = "درخواست شما با موفقیت ثبت گردید";
            contactModel  = new ContactModel();
            return;
        }
        else
        {
            mes = "خطا در ثبت درخواست. لطفاً مجدداً تلاش نمایید";
        }


        Console.WriteLine("پیام ارسال شد");
    }
}
